{"ast":null,"code":"\"use strict\";\n\n/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nvar _regeneratorRuntime = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineProperties = exports.resolveProperties = void 0;\nfunction checkType(value, type, name) {\n  var types = type.split(\"|\").map(function (t) {\n    return t.trim();\n  });\n  for (var i = 0; i < types.length; i++) {\n    switch (type) {\n      case \"any\":\n        return;\n      case \"bigint\":\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        if (typeof value === type) {\n          return;\n        }\n    }\n  }\n  var error = new Error(\"invalid value for type \".concat(type));\n  error.code = \"INVALID_ARGUMENT\";\n  error.argument = \"value.\".concat(name);\n  error.value = value;\n  throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nfunction resolveProperties(_x) {\n  return _resolveProperties.apply(this, arguments);\n}\nfunction _resolveProperties() {\n  _resolveProperties = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(value) {\n    var keys, results;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          keys = Object.keys(value);\n          _context.next = 3;\n          return Promise.all(keys.map(function (k) {\n            return Promise.resolve(value[k]);\n          }));\n        case 3:\n          results = _context.sent;\n          return _context.abrupt(\"return\", results.reduce(function (accum, v, index) {\n            accum[keys[index]] = v;\n            return accum;\n          }, {}));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _resolveProperties.apply(this, arguments);\n}\nexports.resolveProperties = resolveProperties;\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nfunction defineProperties(target, values, types) {\n  for (var key in values) {\n    var value = values[key];\n    var type = types ? types[key] : null;\n    if (type) {\n      checkType(value, type, key);\n    }\n    Object.defineProperty(target, key, {\n      enumerable: true,\n      value: value,\n      writable: false\n    });\n  }\n}\nexports.defineProperties = defineProperties;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_asyncToGenerator","checkType","value","type","name","types","split","map","t","trim","i","length","error","Error","concat","code","argument","resolveProperties","_x","_resolveProperties","apply","arguments","mark","_callee","keys","results","wrap","_callee$","_context","prev","next","Object","Promise","all","k","resolve","sent","abrupt","reduce","accum","v","index","stop","exports","defineProperties","target","values","key","defineProperty","enumerable","writable"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/ethers/src.ts/utils/properties.ts"],"sourcesContent":["/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}