{"ast":null,"code":"var _jsxFileName = \"/Users/aryanbindroo/eth-waterloo/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AssetSelector from \"./components/AssetSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        setProvider(new ethers.providers.Web3Provider(window.ethereum));\n      } catch (error) {\n        console.error(error);\n        alert(\"Connection to Metamask failed\");\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n  useEffect(() => {\n    const button = document.querySelector(\".button.button-primary.button-block\");\n    if (button) {\n      button.addEventListener(\"click\", connectWallet);\n    }\n    return () => {\n      if (button) {\n        button.removeEventListener(\"click\", connectWallet);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(AssetSelector, {\n      account: account,\n      provider: provider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SbU3J6fVKzllcYE8AWNC0h6VrNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AssetSelector","jsxDEV","_jsxDEV","ethers","require","App","_s","account","setAccount","provider","setProvider","connectWallet","window","ethereum","accounts","request","method","providers","Web3Provider","error","console","alert","button","document","querySelector","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AssetSelector from \"./components/AssetSelector\";\nconst ethers = require(\"ethers\");\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setAccount(accounts[0]);\n        setProvider(new ethers.providers.Web3Provider(window.ethereum));\n      } catch (error) {\n        console.error(error);\n        alert(\"Connection to Metamask failed\");\n      }\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n\n  useEffect(() => {\n    const button = document.querySelector(\n      \".button.button-primary.button-block\"\n    );\n\n    if (button) {\n      button.addEventListener(\"click\", connectWallet);\n    }\n\n    return () => {\n      if (button) {\n        button.removeEventListener(\"click\", connectWallet);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <button onClick={connectWallet}>Connect Wallet</button>\n      {account && <AssetSelector account={account} provider={provider} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAC7CC,MAAM,EAAE;QACV,CAAC,CAAC;QACFR,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvBJ,WAAW,CAAC,IAAIP,MAAM,CAACc,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC,CAAC;MACjE,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBE,KAAK,CAAC,+BAA+B,CAAC;MACxC;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAMuB,MAAM,GAAGC,QAAQ,CAACC,aAAa,CACnC,qCACF,CAAC;IAED,IAAIF,MAAM,EAAE;MACVA,MAAM,CAACG,gBAAgB,CAAC,OAAO,EAAEd,aAAa,CAAC;IACjD;IAEA,OAAO,MAAM;MACX,IAAIW,MAAM,EAAE;QACVA,MAAM,CAACI,mBAAmB,CAAC,OAAO,EAAEf,aAAa,CAAC;MACpD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAQ2B,OAAO,EAAElB,aAAc;MAAAiB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtD1B,OAAO,iBAAIL,OAAA,CAACF,aAAa;MAACO,OAAO,EAAEA,OAAQ;MAACE,QAAQ,EAAEA;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV;AAAC3B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}