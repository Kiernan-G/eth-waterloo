{"ast":null,"code":"\"use strict\";\n\n// Cipher Block Chaining\nvar _classCallCheck = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CBC_iv, _CBC_lastBlock;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CBC = void 0;\nvar mode_js_1 = require(\"./mode.js\");\nvar CBC = /*#__PURE__*/function (_mode_js_1$ModeOfOper) {\n  _inherits(CBC, _mode_js_1$ModeOfOper);\n  var _super = _createSuper(CBC);\n  function CBC(key, iv) {\n    var _this;\n    _classCallCheck(this, CBC);\n    _this = _super.call(this, \"ECC\", key, CBC);\n    _CBC_iv.set(_assertThisInitialized(_this), void 0);\n    _CBC_lastBlock.set(_assertThisInitialized(_this), void 0);\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      __classPrivateFieldSet(_assertThisInitialized(_this), _CBC_iv, new Uint8Array(iv), \"f\");\n    } else {\n      __classPrivateFieldSet(_assertThisInitialized(_this), _CBC_iv, new Uint8Array(16), \"f\");\n    }\n    __classPrivateFieldSet(_assertThisInitialized(_this), _CBC_lastBlock, _this.iv, \"f\");\n    return _this;\n  }\n  _createClass(CBC, [{\n    key: \"iv\",\n    get: function get() {\n      return new Uint8Array(__classPrivateFieldGet(this, _CBC_iv, \"f\"));\n    }\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(plaintext) {\n      if (plaintext.length % 16) {\n        throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n      }\n      var ciphertext = new Uint8Array(plaintext.length);\n      for (var i = 0; i < plaintext.length; i += 16) {\n        for (var j = 0; j < 16; j++) {\n          __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] ^= plaintext[i + j];\n        }\n        __classPrivateFieldSet(this, _CBC_lastBlock, this.aes.encrypt(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\")), \"f\");\n        ciphertext.set(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\"), i);\n      }\n      return ciphertext;\n    }\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(ciphertext) {\n      if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n      }\n      var plaintext = new Uint8Array(ciphertext.length);\n      for (var i = 0; i < ciphertext.length; i += 16) {\n        var block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n        for (var j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j];\n          __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] = ciphertext[i + j];\n        }\n      }\n      return plaintext;\n    }\n  }]);\n  return CBC;\n}(mode_js_1.ModeOfOperation);\nexports.CBC = CBC;\n_CBC_iv = new WeakMap(), _CBC_lastBlock = new WeakMap();","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_assertThisInitialized","_inherits","_createSuper","mode_js_1","CBC","_mode_js_1$ModeOfOper","_super","key","iv","_this","call","_CBC_iv","set","_CBC_lastBlock","length","TypeError","__classPrivateFieldSet","Uint8Array","get","__classPrivateFieldGet","value","encrypt","plaintext","ciphertext","i","j","aes","decrypt","block","subarray","ModeOfOperation","exports"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/aes-js/src.ts/mode-cbc.ts"],"sourcesContent":["// Cipher Block Chaining\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CBC extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastBlock: Uint8Array;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"ECC\", key, CBC);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastBlock = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n      for (let j = 0; j < 16; j++) {\n        this.#lastBlock[j] ^= plaintext[i + j];\n      }\n\n      this.#lastBlock = this.aes.encrypt(this.#lastBlock);\n      ciphertext.set(this.#lastBlock, i);\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(ciphertext.length);\n    for (let i = 0; i < ciphertext.length; i += 16) {\n        const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n\n        for (let j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this.#lastBlock[j];\n          this.#lastBlock[j] = ciphertext[i + j];\n        }\n    }\n\n    return plaintext;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}