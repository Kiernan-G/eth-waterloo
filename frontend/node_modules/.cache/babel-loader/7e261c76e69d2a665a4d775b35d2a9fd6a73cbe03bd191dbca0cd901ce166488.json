{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUrl = void 0;\nvar errors_js_1 = require(\"./errors.js\");\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\nfunction getUrl(_x, _x2) {\n  return _getUrl.apply(this, arguments);\n}\nfunction _getUrl() {\n  _getUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, _signal) {\n    var protocol, signal, controller, init, resp, headers, respBody, body;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          protocol = req.url.split(\":\")[0].toLowerCase();\n          (0, errors_js_1.assert)(protocol === \"http\" || protocol === \"https\", \"unsupported protocol \".concat(protocol), \"UNSUPPORTED_OPERATION\", {\n            info: {\n              protocol: protocol\n            },\n            operation: \"request\"\n          });\n          (0, errors_js_1.assert)(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n          });\n          signal = undefined;\n          if (_signal) {\n            controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(function () {\n              controller.abort();\n            });\n          }\n          init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal: signal\n          };\n          _context.next = 8;\n          return fetch(req.url, init);\n        case 8:\n          resp = _context.sent;\n          headers = {};\n          resp.headers.forEach(function (value, key) {\n            headers[key.toLowerCase()] = value;\n          });\n          _context.next = 13;\n          return resp.arrayBuffer();\n        case 13:\n          respBody = _context.sent;\n          body = respBody == null ? null : new Uint8Array(respBody);\n          return _context.abrupt(\"return\", {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers: headers,\n            body: body\n          });\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getUrl.apply(this, arguments);\n}\nexports.getUrl = getUrl;","map":{"version":3,"names":["errors_js_1","require","getUrl","_x","_x2","_getUrl","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","req","_signal","protocol","signal","controller","init","resp","headers","respBody","body","wrap","_callee$","_context","prev","next","url","split","toLowerCase","assert","concat","info","operation","credentials","allowInsecureAuthentication","undefined","AbortController","addListener","abort","method","Headers","Array","from","fetch","sent","forEach","value","key","arrayBuffer","Uint8Array","abrupt","statusCode","status","statusMessage","statusText","stop","exports"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/ethers/src.ts/utils/geturl-browser.ts"],"sourcesContent":["import { assert } from \"./errors.js\";\n\nimport type { FetchRequest, FetchCancelSignal, GetUrlResponse } from \"./fetch.js\";\n\n\ndeclare global {\n    class Headers {\n        constructor(values: Array<[ string, string ]>);\n        forEach(func: (v: string, k: string) => void): void;\n    }\n\n    class Response {\n        status: number;\n        statusText: string;\n        headers: Headers;\n        arrayBuffer(): Promise<ArrayBuffer>;\n    }\n\n    type FetchInit = {\n        method?: string,\n        headers?: Headers,\n        body?: Uint8Array\n    };\n\n    function fetch(url: string, init: FetchInit): Promise<Response>;\n}\n\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    const protocol = req.url.split(\":\")[0].toLowerCase();\n\n    assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n        info: { protocol },\n        operation: \"request\"\n    });\n\n    assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"request\"\n    });\n\n    let signal: undefined | AbortSignal = undefined;\n    if (_signal) {\n        const controller = new AbortController();\n        signal = controller.signal;\n        _signal.addListener(() => { controller.abort(); });\n    }\n\n    const init = {\n        method: req.method,\n        headers: new Headers(Array.from(req)),\n        body: req.body || undefined,\n        signal\n    };\n\n    const resp = await fetch(req.url, init);\n\n    const headers: Record<string, string> = { };\n    resp.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n    });\n\n    const respBody = await resp.arrayBuffer();\n    const body = (respBody == null) ? null: new Uint8Array(respBody);\n\n    return {\n        statusCode: resp.status,\n        statusMessage: resp.statusText,\n        headers, body\n    };\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}