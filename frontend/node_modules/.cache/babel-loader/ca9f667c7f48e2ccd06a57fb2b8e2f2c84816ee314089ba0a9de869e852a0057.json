{"ast":null,"code":"\"use strict\";\n\n/**\n *  About Cloudflare\n *\n *  @_subsection: api/providers/thirdparty:Cloudflare  [providers-cloudflare]\n */\nvar _createClass = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CloudflareProvider = void 0;\nvar index_js_1 = require(\"../utils/index.js\");\nvar network_js_1 = require(\"./network.js\");\nvar provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\n/**\n *  About Cloudflare...\n */\nvar CloudflareProvider = /*#__PURE__*/function (_provider_jsonrpc_js_) {\n  _inherits(CloudflareProvider, _provider_jsonrpc_js_);\n  var _super = _createSuper(CloudflareProvider);\n  function CloudflareProvider(_network) {\n    _classCallCheck(this, CloudflareProvider);\n    if (_network == null) {\n      _network = \"mainnet\";\n    }\n    var network = network_js_1.Network.from(_network);\n    (0, index_js_1.assertArgument)(network.name === \"mainnet\", \"unsupported network\", \"network\", _network);\n    return _super.call(this, \"https:/\\/cloudflare-eth.com/\", network, {\n      staticNetwork: network\n    });\n  }\n  return _createClass(CloudflareProvider);\n}(provider_jsonrpc_js_1.JsonRpcProvider);\nexports.CloudflareProvider = CloudflareProvider;","map":{"version":3,"names":["_createClass","require","default","_classCallCheck","_inherits","_createSuper","index_js_1","network_js_1","provider_jsonrpc_js_1","CloudflareProvider","_provider_jsonrpc_js_","_super","_network","network","Network","from","assertArgument","name","call","staticNetwork","JsonRpcProvider","exports"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/ethers/src.ts/providers/provider-cloudflare.ts"],"sourcesContent":["/**\n *  About Cloudflare\n *\n *  @_subsection: api/providers/thirdparty:Cloudflare  [providers-cloudflare]\n */\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  About Cloudflare...\n */\nexport class CloudflareProvider extends JsonRpcProvider {\n    constructor(_network?: Networkish) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        assertArgument(network.name === \"mainnet\", \"unsupported network\", \"network\", _network);\n        super(\"https:/\\/cloudflare-eth.com/\", network, { staticNetwork: network });\n    }\n}\n"],"mappings":";;AAAA;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA,iGAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAF,OAAA,oGAAAC,OAAA;AAAA,IAAAE,SAAA,GAAAH,OAAA,8FAAAC,OAAA;AAAA,IAAAG,YAAA,GAAAJ,OAAA,iGAAAC,OAAA;;;;;AAMA,IAAAI,UAAA,GAAAL,OAAA;AAEA,IAAAM,YAAA,GAAAN,OAAA;AACA,IAAAO,qBAAA,GAAAP,OAAA;AAIA;;;AAAA,IAGaQ,kBAAmB,0BAAAC,qBAAA;EAAAN,SAAA,CAAAK,kBAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAAN,YAAA,CAAAI,kBAAA;EAC5B,SAAAA,mBAAYG,QAAqB;IAAAT,eAAA,OAAAM,kBAAA;IAC7B,IAAIG,QAAQ,IAAI,IAAI,EAAE;MAAEA,QAAQ,GAAG,SAAS;;IAC5C,IAAMC,OAAO,GAAGN,YAAA,CAAAO,OAAO,CAACC,IAAI,CAACH,QAAQ,CAAC;IACtC,IAAAN,UAAA,CAAAU,cAAc,EAACH,OAAO,CAACI,IAAI,KAAK,SAAS,EAAE,qBAAqB,EAAE,SAAS,EAAEL,QAAQ,CAAC;IAAC,OAAAD,MAAA,CAAAO,IAAA,OACjF,8BAA8B,EAAEL,OAAO,EAAE;MAAEM,aAAa,EAAEN;IAAO,CAAE;EAC7E;EAAC,OAAAb,YAAA,CAAAS,kBAAA;AAAA,EANmCD,qBAAA,CAAAY,eAAe;AAAvDC,OAAA,CAAAZ,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}