{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _defineProperty = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnonymousCoder = void 0;\nvar abstract_coder_js_1 = require(\"./abstract-coder.js\");\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nvar AnonymousCoder = /*#__PURE__*/function (_abstract_coder_js_1$) {\n  _inherits(AnonymousCoder, _abstract_coder_js_1$);\n  var _super = _createSuper(AnonymousCoder);\n  function AnonymousCoder(coder) {\n    var _this;\n    _classCallCheck(this, AnonymousCoder);\n    _this = _super.call(this, coder.name, coder.type, \"_\", coder.dynamic);\n    _defineProperty(_assertThisInitialized(_this), \"coder\", void 0);\n    _this.coder = coder;\n    return _this;\n  }\n  _createClass(AnonymousCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return this.coder.defaultValue();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return this.coder.encode(writer, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return this.coder.decode(reader);\n    }\n  }]);\n  return AnonymousCoder;\n}(abstract_coder_js_1.Coder);\nexports.AnonymousCoder = AnonymousCoder;","map":{"version":3,"names":["abstract_coder_js_1","require","AnonymousCoder","_abstract_coder_js_1$","_inherits","_super","_createSuper","coder","_this","_classCallCheck","call","name","type","dynamic","_defineProperty","_assertThisInitialized","_createClass","key","value","defaultValue","encode","writer","decode","reader","Coder","exports"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/ethers/src.ts/abi/coders/anonymous.ts"],"sourcesContent":["import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,mBAAA,GAAAC,OAAA;AAIA;;;;;AAAA,IAKaC,cAAe,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,cAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,cAAA;EAGxB,SAAAA,eAAYK,KAAY;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,cAAA;IACpBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK,CAACI,IAAI,EAAEJ,KAAK,CAACK,IAAI,EAAE,GAAG,EAAEL,KAAK,CAACM,OAAO;IAAEC,eAAA,CAAAC,sBAAA,CAAAP,KAAA;IAClDA,KAAA,CAAKD,KAAK,GAAGA,KAAK;IAAC,OAAAC,KAAA;EACvB;EAACQ,YAAA,CAAAd,cAAA;IAAAe,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAA,EAAY;MACR,OAAO,IAAI,CAACZ,KAAK,CAACY,YAAY,EAAE;IACpC;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAED,SAAAE,OAAOC,MAAc,EAAEH,KAAU;MAC7B,OAAO,IAAI,CAACX,KAAK,CAACa,MAAM,CAACC,MAAM,EAAEH,KAAK,CAAC;IAC3C;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAI,OAAOC,MAAc;MACjB,OAAO,IAAI,CAAChB,KAAK,CAACe,MAAM,CAACC,MAAM,CAAC;IACpC;EAAC;EAAA,OAAArB,cAAA;AAAA,EAlB+BF,mBAAA,CAAAwB,KAAK;AAAzCC,OAAA,CAAAvB,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}