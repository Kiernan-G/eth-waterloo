{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hmac = void 0;\nvar _assert_js_1 = require(\"./_assert.js\");\nvar utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nvar HMAC = /*#__PURE__*/function (_utils_js_1$Hash) {\n  _inherits(HMAC, _utils_js_1$Hash);\n  var _super = _createSuper(HMAC);\n  function HMAC(hash, _key) {\n    var _this;\n    _classCallCheck(this, HMAC);\n    _this = _super.call(this);\n    _this.finished = false;\n    _this.destroyed = false;\n    _assert_js_1.default.hash(hash);\n    var key = (0, utils_js_1.toBytes)(_key);\n    _this.iHash = hash.create();\n    if (!(_this.iHash instanceof utils_js_1.Hash)) throw new TypeError('Expected instance of class which extends utils.Hash');\n    var blockLen = _this.blockLen = _this.iHash.blockLen;\n    _this.outputLen = _this.iHash.outputLen;\n    var pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > _this.iHash.blockLen ? hash.create().update(key).digest() : key);\n    for (var i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    _this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    _this.oHash = hash.create();\n    // Undo internal XOR && apply outer XOR\n    for (var _i = 0; _i < pad.length; _i++) pad[_i] ^= 0x36 ^ 0x5c;\n    _this.oHash.update(pad);\n    pad.fill(0);\n    return _this;\n  }\n  _createClass(HMAC, [{\n    key: \"update\",\n    value: function update(buf) {\n      _assert_js_1.default.exists(this);\n      this.iHash.update(buf);\n      return this;\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      _assert_js_1.default.exists(this);\n      _assert_js_1.default.bytes(out, this.outputLen);\n      this.finished = true;\n      this.iHash.digestInto(out);\n      this.oHash.update(out);\n      this.oHash.digestInto(out);\n      this.destroy();\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      var out = new Uint8Array(this.oHash.outputLen);\n      this.digestInto(out);\n      return out;\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      // Create new instance without calling constructor since key already in state and we don't know it.\n      to || (to = Object.create(Object.getPrototypeOf(this), {}));\n      var oHash = this.oHash,\n        iHash = this.iHash,\n        finished = this.finished,\n        destroyed = this.destroyed,\n        blockLen = this.blockLen,\n        outputLen = this.outputLen;\n      to = to;\n      to.finished = finished;\n      to.destroyed = destroyed;\n      to.blockLen = blockLen;\n      to.outputLen = outputLen;\n      to.oHash = oHash._cloneInto(to.oHash);\n      to.iHash = iHash._cloneInto(to.iHash);\n      return to;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.oHash.destroy();\n      this.iHash.destroy();\n    }\n  }]);\n  return HMAC;\n}(utils_js_1.Hash);\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nvar hmac = function hmac(hash, key, message) {\n  return new HMAC(hash, key).update(message).digest();\n};\nexports.hmac = hmac;\nexports.hmac.create = function (hash, key) {\n  return new HMAC(hash, key);\n};","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","hmac","_assert_js_1","utils_js_1","HMAC","_utils_js_1$Hash","_super","hash","_key","_this","call","finished","destroyed","key","toBytes","iHash","create","Hash","TypeError","blockLen","outputLen","pad","Uint8Array","set","length","update","digest","i","oHash","fill","buf","exists","digestInto","out","bytes","destroy","_cloneInto","to","getPrototypeOf","message"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@noble/hashes/hmac.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}