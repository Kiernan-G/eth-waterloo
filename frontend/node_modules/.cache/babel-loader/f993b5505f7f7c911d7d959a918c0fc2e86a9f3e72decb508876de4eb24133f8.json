{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _defineProperty = require(\"/Users/aryanbindroo/eth-waterloo/frontend/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NumberCoder = void 0;\nvar index_js_1 = require(\"../../utils/index.js\");\nvar typed_js_1 = require(\"../typed.js\");\nvar abstract_coder_js_1 = require(\"./abstract-coder.js\");\nvar BN_0 = BigInt(0);\nvar BN_1 = BigInt(1);\nvar BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  @_ignore\n */\nvar NumberCoder = /*#__PURE__*/function (_abstract_coder_js_1$) {\n  _inherits(NumberCoder, _abstract_coder_js_1$);\n  var _super = _createSuper(NumberCoder);\n  function NumberCoder(size, signed, localName) {\n    var _this;\n    _classCallCheck(this, NumberCoder);\n    var name = (signed ? \"int\" : \"uint\") + size * 8;\n    _this = _super.call(this, name, name, localName, false);\n    _defineProperty(_assertThisInitialized(_this), \"size\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"signed\", void 0);\n    (0, index_js_1.defineProperties)(_assertThisInitialized(_this), {\n      size: size,\n      signed: signed\n    }, {\n      size: \"number\",\n      signed: \"boolean\"\n    });\n    return _this;\n  }\n  _createClass(NumberCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return 0;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, _value) {\n      var value = (0, index_js_1.getBigInt)(typed_js_1.Typed.dereference(_value, this.type));\n      // Check bounds are safe for encoding\n      var maxUintValue = (0, index_js_1.mask)(BN_MAX_UINT256, abstract_coder_js_1.WordSize * 8);\n      if (this.signed) {\n        var bounds = (0, index_js_1.mask)(maxUintValue, this.size * 8 - 1);\n        if (value > bounds || value < -(bounds + BN_1)) {\n          this._throwError(\"value out-of-bounds\", _value);\n        }\n        value = (0, index_js_1.toTwos)(value, 8 * abstract_coder_js_1.WordSize);\n      } else if (value < BN_0 || value > (0, index_js_1.mask)(maxUintValue, this.size * 8)) {\n        this._throwError(\"value out-of-bounds\", _value);\n      }\n      return writer.writeValue(value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      var value = (0, index_js_1.mask)(reader.readValue(), this.size * 8);\n      if (this.signed) {\n        value = (0, index_js_1.fromTwos)(value, this.size * 8);\n      }\n      return value;\n    }\n  }]);\n  return NumberCoder;\n}(abstract_coder_js_1.Coder);\nexports.NumberCoder = NumberCoder;","map":{"version":3,"names":["index_js_1","require","typed_js_1","abstract_coder_js_1","BN_0","BigInt","BN_1","BN_MAX_UINT256","NumberCoder","_abstract_coder_js_1$","_inherits","_super","_createSuper","size","signed","localName","_this","_classCallCheck","name","call","_defineProperty","_assertThisInitialized","defineProperties","_createClass","key","value","defaultValue","encode","writer","_value","getBigInt","Typed","dereference","type","maxUintValue","mask","WordSize","bounds","_throwError","toTwos","writeValue","decode","reader","readValue","fromTwos","Coder","exports"],"sources":["/Users/aryanbindroo/eth-waterloo/frontend/node_modules/ethers/src.ts/abi/coders/number.ts"],"sourcesContent":["import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAIA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AAOA,IAAMG,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;AACtB,IAAMC,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;AACtB,IAAME,cAAc,GAAGF,MAAM,CAAC,oEAAoE,CAAC;AAEnG;;;AAAA,IAGaG,WAAY,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EAIrB,SAAAA,YAAYK,IAAY,EAAEC,MAAe,EAAEC,SAAiB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,WAAA;IACxD,IAAMU,IAAI,GAAI,CAACJ,MAAM,GAAG,KAAK,GAAE,MAAM,IAAKD,IAAI,GAAG,CAAG;IACpDG,KAAA,GAAAL,MAAA,CAAAQ,IAAA,OAAMD,IAAI,EAAEA,IAAI,EAAEH,SAAS,EAAE,KAAK;IAAEK,eAAA,CAAAC,sBAAA,CAAAL,KAAA;IAAAI,eAAA,CAAAC,sBAAA,CAAAL,KAAA;IAEpC,IAAAhB,UAAA,CAAAsB,gBAAgB,EAAAD,sBAAA,CAAAL,KAAA,GAAoB;MAAEH,IAAI,EAAJA,IAAI;MAAEC,MAAM,EAANA;IAAM,CAAE,EAAE;MAAED,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAS,CAAE,CAAC;IAAC,OAAAE,KAAA;EACjG;EAACO,YAAA,CAAAf,WAAA;IAAAgB,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAA,EAAY;MACR,OAAO,CAAC;IACZ;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAED,SAAAE,OAAOC,MAAc,EAAEC,MAA4B;MAC/C,IAAIJ,KAAK,GAAG,IAAAzB,UAAA,CAAA8B,SAAS,EAAC5B,UAAA,CAAA6B,KAAK,CAACC,WAAW,CAACH,MAAM,EAAE,IAAI,CAACI,IAAI,CAAC,CAAC;MAE3D;MACA,IAAIC,YAAY,GAAG,IAAAlC,UAAA,CAAAmC,IAAI,EAAC5B,cAAc,EAAEJ,mBAAA,CAAAiC,QAAQ,GAAG,CAAC,CAAC;MACrD,IAAI,IAAI,CAACtB,MAAM,EAAE;QACb,IAAIuB,MAAM,GAAG,IAAArC,UAAA,CAAAmC,IAAI,EAACD,YAAY,EAAG,IAAI,CAACrB,IAAI,GAAG,CAAC,GAAI,CAAC,CAAC;QACpD,IAAIY,KAAK,GAAGY,MAAM,IAAIZ,KAAK,GAAG,EAAEY,MAAM,GAAG/B,IAAI,CAAC,EAAE;UAC5C,IAAI,CAACgC,WAAW,CAAC,qBAAqB,EAAET,MAAM,CAAC;;QAEnDJ,KAAK,GAAG,IAAAzB,UAAA,CAAAuC,MAAM,EAACd,KAAK,EAAE,CAAC,GAAGtB,mBAAA,CAAAiC,QAAQ,CAAC;OACtC,MAAM,IAAIX,KAAK,GAAGrB,IAAI,IAAIqB,KAAK,GAAG,IAAAzB,UAAA,CAAAmC,IAAI,EAACD,YAAY,EAAE,IAAI,CAACrB,IAAI,GAAG,CAAC,CAAC,EAAE;QAClE,IAAI,CAACyB,WAAW,CAAC,qBAAqB,EAAET,MAAM,CAAC;;MAGnD,OAAOD,MAAM,CAACY,UAAU,CAACf,KAAK,CAAC;IACnC;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAgB,OAAOC,MAAc;MACjB,IAAIjB,KAAK,GAAG,IAAAzB,UAAA,CAAAmC,IAAI,EAACO,MAAM,CAACC,SAAS,EAAE,EAAE,IAAI,CAAC9B,IAAI,GAAG,CAAC,CAAC;MAEnD,IAAI,IAAI,CAACC,MAAM,EAAE;QACbW,KAAK,GAAG,IAAAzB,UAAA,CAAA4C,QAAQ,EAACnB,KAAK,EAAE,IAAI,CAACZ,IAAI,GAAG,CAAC,CAAC;;MAG1C,OAAOY,KAAK;IAChB;EAAC;EAAA,OAAAjB,WAAA;AAAA,EAzC4BL,mBAAA,CAAA0C,KAAK;AAAtCC,OAAA,CAAAtC,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}